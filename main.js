!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class t{constructor({_id:e,name:t,link:s,isLiked:r},i,n,o,a){this.name=t,this.link=s,this._id=e,this._isLiked=r,this._cardSelector=i,this._handleImageClick=n,this._handleCardDelete=o,this._handleLikeCard=a,this._previewImageElement=null}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._deleteButton.addEventListener("click",(()=>{this._handleCardDelete(this)})),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this)}))}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}updateIsLiked(e){this._isLiked=e,this._handleLikeIcon()}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._setEventListeners(),this._handleLikeIcon(),this._cardTitleElement=this._cardElement.querySelector(".card-title"),this._cardImageElement.src=this.link,this._cardImageElement.alt=this.name,this._cardTitleElement.textContent=this.name,this._cardElement}}var s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){this._errorMessageEl=this._formEl.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._formEl.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0;this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}resetValidation(){this.toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class r{constructor({popupSelector:e}){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class i extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._formButton=this._popupElement.querySelector(".modal__button"),this._formButtonText=this._formButton.textContent,this._handleFormSubmit=t,this._inputList=this._popupElement.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}renderLoading(e,t="Saving..."){this._formButton.textContent=e?t:this._formButtonText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",this._handleSubmit),super.setEventListeners()}_handleSubmit=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())};close(){super.close(),this._popupForm.reset()}}const n=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserData(){return this._request(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers})}editProfile(e,t){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}addNewCard({name:e,link:t}){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}updateAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"128649a3-288e-4d03-932e-695fc20e4348","Content-Type":"application/json"}}),o=document.querySelector("#profile-edit-modal"),a=document.forms["profile-form"],l=document.querySelector("#profile-edit-button"),d=o.querySelector("#profile-title-input"),h=o.querySelector("#profile-description-input"),c=document.querySelector("#avatar-edit-button"),u=document.forms.modal__form_avatar,_=(document.querySelector(".profile__image"),document.forms["card-form"]),m=document.querySelector(".profile__add-button"),p=new class{constructor(e,t,s){this._nameElement=document.querySelector(e),this._aboutElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._aboutElement.textContent=t}changeAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__description",".profile__image"),E=new i("#profile-edit-modal",(e=>{E.renderLoading(!0),n.editProfile(e.title,e.subheader).then((e=>{p.setUserInfo(e.name,e.about),E.close()})).catch((e=>console.log(e))).finally((()=>{E.renderLoading(!1)}))}));E.setEventListeners();const v=new i("#add-card-modal",(e=>{v.renderLoading(!0),n.addNewCard({name:e.title,link:e.url}).then((e=>{S(e),v.close()})).catch((e=>console.log(e))).finally((()=>{v.renderLoading(!1)}))}));v.setEventListeners();const L=new class extends r{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector(".modal__image-preview"),this._previewImageTitle=this._popupElement.querySelector(".modal__image-title")}open({name:e,link:t}){this._previewImage.src=t,this._previewImage.alt=e,this._previewImageTitle.textContent=e,super.open()}}("#preview-modal");L.setEventListeners();const f=new class{constructor({items:e,renderer:t},s){this._items=e,this._renderer=t,this._classSection=document.querySelector(s)}renderItems(e){this._classSection.innerHTML="",this._items=e,this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._classSection.prepend(e)}}({items:[],renderer:S},".cards__list"),g=new i("#profile-avatar-modal",(e=>{g.renderLoading(!0),n.updateAvatar(e.link).then((e=>{p.changeAvatar(e.avatar),g.close()})).catch((e=>console.log("Error updating avatar:",e))).finally((()=>{g.renderLoading(!1)}))}));function S(e){const s=new t(e,"#card-template",b,k,C).getView();f.addItem(s)}function b(e){L.open({name:e.name,link:e.link})}function k(e){y.open(),y.setConfirmSubmit((()=>{n.deleteCard(e._id).then((()=>{y.close(),e.handleDeleteCard()})).catch(console.error)}))}function C(e){e._isLiked?n.removeLike(e._id).then((t=>{e.updateIsLiked(t.isLiked)})).catch((e=>console.log(e))):n.addLike(e._id).then((t=>{e.updateIsLiked(t.isLiked)})).catch(console.error)}g.setEventListeners(),l.addEventListener("click",(()=>{const e=p.getUserInfo();d.value=e.name,h.value=e.about,E.open(),q.resetValidation()})),m.addEventListener("click",(()=>{v.open(),I.toggleButtonState()}));const y=new class extends r{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__button-confirm")}setConfirmSubmit(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({popupSelector:"#delete-card-modal"});y.setEventListeners(),c.addEventListener("click",(()=>{g.open(),B.toggleButtonState()}));const I=new s(e,_);I.enableValidation();const q=new s(e,a);q.enableValidation();const B=new s(e,u);B.enableValidation(),Promise.all([n.getUserData(),n.getInitialCards()]).then((([e,t])=>{p.setUserInfo(e.name,e.about),p.changeAvatar(e.avatar),f.renderItems(t)})).catch((e=>{console.error("Error fetching data:",e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,